# Generated by Django 3.0.4 on 2021-04-19 11:10

import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('document', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExerciseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=350)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=355, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TagLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('difficulty_level', models.CharField(choices=[('EXAM', 'Exam'), ('CHALLENGE', 'Challenge'), ('TRAINING', 'Training'), ('STANDARD', 'Standard')], default='TRAINING', max_length=9)),
                ('color', colorfield.fields.ColorField(default='#FF0000', max_length=18)),
            ],
        ),
        migrations.CreateModel(
            name='TagProblemType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='TagProblemTypeResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.Resource')),
                ('tag_problem_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag.TagProblemType')),
            ],
        ),
        migrations.CreateModel(
            name='TagLevelResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.Resource')),
                ('tag_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag.TagLevel')),
            ],
        ),
        migrations.CreateModel(
            name='TagConcept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.Resource')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionTypeResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag.QuestionType')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.Resource')),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseTypeResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercise_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag.ExerciseType')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.Resource')),
            ],
        ),
    ]
